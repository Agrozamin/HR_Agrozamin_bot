from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, Contact, ContentType, ReplyKeyboardRemove
from aiogram.types.input_file import InputFile

from tgbot.keyboards.inline import language_inl_kb, jins_inl_kb, education_inl_kb, tasdiqlash_inl_kb, orqaga_inl_kb
from tgbot.keyboards.reply import phone_keyb
from tgbot.misc.states import UserInfo 

from tgbot.hr_i18n import _

async def user_start(message: Message, state: FSMContext):
    data = await state.get_data()
    if await state.get_state() == "UserInfo:registered":
        await message.answer("{data}".format(data=data))
    else:
        # await message.answer_photo(photo=InputFile(r'C:\Users\alimov.a\Desktop\hrbot (2)\hrbot\tgbot\photos\start.jpg'))
        await message.answer(_("""  
    –ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º ! –ö–µ–ª–∏–Ω–≥, –∞–≤–≤–∞–ª —Ö–∏–∑–º–∞—Ç –∫—û—Ä—Å–∞—Ç–∏—à —Ç–∏–ª–∏–Ω–∏ —Ç–∞–Ω–ª–∞–± –æ–ª–∞–π–ª–∏–∫.

    Assalomu alaykum ! Keling, avval xizmat ko'rsatish tilini tanlab olaylik.

    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ ! –î–∞–≤–∞–π—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏–º —è–∑—ã–∫ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è."""), reply_markup=language_inl_kb)


async def user_fio(message: Message, state: FSMContext):
    data = await state.get_data()
    if 6 > len(message.text.split()) >= 3:
        await state.update_data(fio=message.text)
        await message.delete()
        await message.bot.delete_message(chat_id=message.chat.id, message_id=data.get('fioms')['message_id'])
        print(data.get('fioms')['message_id'])
        await UserInfo.next()
        phonems = await message.answer(_("–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ +998********* —à–∞–∫–ª–¥–∞ —é–±–æ—Ä–∏–Ω–≥, —ë–∫–∏ \"üì± –†–∞“õ–∞–º —é–±–æ—Ä–∏—à\" —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥:"), reply_markup=phone_keyb)
        await state.update_data(phonems=phonems)
    else:
        await message.delete()
        await message.bot.delete_message(chat_id=message.chat.id, message_id=data.get('fioms')['message_id'])
        fioms = await message.answer("""
‚ùå  –§–∞–º–∏–ª–∏—è, –ò—Å–º, –®–∞—Ä–∏—Ñ —Ö–∞—Ç–æ –∫–∏—Ä–∏—Ç–∏–ª–¥–∏

‚úÖ –ê–ª–∏–π–µ–≤ –ê–ª–∏ –ê–ª–∏–π–µ–≤–∏—á

‚úçüèº –§–∞–º–∏–ª–∏—è, –ò—Å–º, –®–∞—Ä–∏—Ñ–∏–Ω–≥–∏–∑–Ω–∏ “õ–∞–π—Ç–∞–¥–∞–Ω –∫–∏—Ä–∏—Ç–∏–Ω–≥.
""")    
        await state.update_data(fioms=fioms)
    

async def user_phone(message: Message, state: FSMContext):
    await message.delete()
    data = await state.get_data()
    await message.bot.delete_message(chat_id=message.chat.id, message_id=data.get('phonems')['message_id'])
    try:
        await message.bot.delete_message(chat_id=message.chat.id, message_id=data.get('phonems2')['message_id'])
    except Exception:
        pass
    try:
        await state.update_data(phone=message.contact.phone_number)
        phonems = await message.answer(_("{phone} —Ä–∞–∫–∞–º–∏ –∫–∞–±—É–ª –∫–∏–ª–∏–Ω–¥–∏\n–ñ–∏–Ω—Å–∏–Ω–≥–∏–∑:".format(phone=message.contact.phone_number)), reply_markup=jins_inl_kb)
        await UserInfo.next()

    except Exception:
        try:
            if len(str(int(message.text.replace(" ", "")))) == 12:
                await state.update_data(phone=message.text)
                phonems = await message.answer(_("{phone} —Ä–∞–∫–∞–º–∏ –∫–∞–±—É–ª –∫–∏–ª–∏–Ω–¥–∏\n–ñ–∏–Ω—Å–∏–Ω–≥–∏–∑:".format(phone=message.text)), reply_markup=jins_inl_kb)
                await UserInfo.next()
            else:
                raise Exception
        except Exception:
            phonems = await message.answer("""
‚ùå  –¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑ –Ω–æ—Ç—û“ì—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–¥–∞ –∫–∏—Ä–∏—Ç–∏–ª–≥–∞–Ω.

‚òùÔ∏è –¢e–ªe—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ +9989** *** ** **
—à–∞–∫–ª–¥–∞ —é–±–æ—Ä–∏–Ω–≥, —ë–∫–∏ "üì± –†–∞“õ–∞–º —é–±–æ—Ä–∏—à" —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥:""", reply_markup=phone_keyb)


    await state.update_data(phonems=phonems)


async def additional_info(message: Message, state: FSMContext):
    await state.update_data(additional=message.text)
    await message.delete()
    data = await state.get_data()
    try:
        await message.bot.delete_message(message.chat.id, message_id=data.get('anketams')['message_id'])
    except Exception:
        pass
    await message.bot.edit_message_text(_("""
–ê–Ω–∫–µ—Ç–∞–Ω–≥–∏–∑ —Ç—É–∑–∏–ª–¥–∏: 
–§–ò–û: {name}
–¢–µ–ª–µ—Ñ–æ–Ω: {phone}
–Å—à–∏–Ω–≥–∏–∑: {age}
–ú–∞—ä–ª—É–º–æ—Ç–∏–Ω–≥–∏–∑: {educ}
–î–∞—Å—Ç—É—Ä–ª–∞—à —Ç–∏–ª–∏: {prog_lang}
–ö–æ—à–∏–º—á–∞ –º–∞—å–ª—É–º–æ—Ç–ª–∞—Ä: {add_info}
""".format(
    name=data.get('fio'),
    phone=data.get('phone'),
    age=data.get('age'),
    educ=data.get('education'),
    prog_lang=data.get('prog_lang'),
    add_info=data.get('additional')
    )), chat_id=message.chat.id, message_id=data.get('addms')['message_id'], reply_markup=tasdiqlash_inl_kb)
    await UserInfo.next()

async def phone_orqaga(message: Message, state: FSMContext):
    data = await state.get_data()
    await UserInfo.previous()
    await message.bot.delete_message(chat_id=message.chat.id, message_id=data.get('phonems')['message_id'])
    await message.delete()
    fioms = await message.bot.send_message(message.chat.id, "‚úçüèº –§–∞–º–∏–ª–∏—è, –ò—Å–º, –®–∞—Ä–∏—Ñ–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥.", reply_markup=ReplyKeyboardRemove(True))
    await state.update_data(fioms=fioms)

def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, commands=["start"], state="*")
    dp.register_message_handler(user_fio, state=UserInfo.fio)
    dp.register_message_handler(phone_orqaga, state=UserInfo.telefon, text='üîô  –û—Ä–∫–∞–≥–∞')
    dp.register_message_handler(user_phone, state=UserInfo.telefon, content_types=[ContentType.TEXT, ContentType.CONTACT])
    dp.register_message_handler(additional_info, state=UserInfo.additional)
